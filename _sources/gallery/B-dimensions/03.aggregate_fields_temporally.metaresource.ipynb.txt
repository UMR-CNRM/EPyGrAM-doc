{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Aggregate fields temporally (via meta_resource)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:20:10.849715Z",
     "iopub.status.busy": "2024-05-15T16:20:10.848760Z",
     "iopub.status.idle": "2024-05-15T16:20:11.214529Z",
     "shell.execute_reply": "2024-05-15T16:20:11.214242Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "# for figures in notebook\n",
    "\n",
    "# import & initialize epygram\n",
    "import epygram\n",
    "epygram.init_env()\n",
    "\n",
    "# path to file\n",
    "import os\n",
    "INPUTS_DIR = os.path.join('..', 'inputs')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:20:11.219919Z",
     "iopub.status.busy": "2024-05-15T16:20:11.219658Z",
     "iopub.status.idle": "2024-05-15T16:20:11.225087Z",
     "shell.execute_reply": "2024-05-15T16:20:11.224841Z"
    }
   },
   "outputs": [],
   "source": [
    "paths = [os.path.join(INPUTS_DIR, 'grid.arome-forecast.guyane0025+00{:02}:00.grib'.format(i))\n",
    "         for i in (0, 12, 24)]\n",
    "r = epygram.resources.meta_resource(paths, 'r', 'MV')  # MV = Multi-Validities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:20:11.227508Z",
     "iopub.status.busy": "2024-05-15T16:20:11.227230Z",
     "iopub.status.idle": "2024-05-15T16:20:11.753054Z",
     "shell.execute_reply": "2024-05-15T16:20:11.752800Z"
    }
   },
   "outputs": [],
   "source": [
    "f = r.readfield('shortName:2r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:20:11.756001Z",
     "iopub.status.busy": "2024-05-15T16:20:11.755706Z",
     "iopub.status.idle": "2024-05-15T16:20:11.757327Z",
     "shell.execute_reply": "2024-05-15T16:20:11.757554Z"
    }
   },
   "outputs": [],
   "source": [
    "print(f.validity)\n",
    "print(f.getdata(d4=True).shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
