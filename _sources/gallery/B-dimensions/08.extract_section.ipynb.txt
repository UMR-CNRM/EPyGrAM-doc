{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Extract a V2D+T section from a 4D field"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:21:12.443850Z",
     "iopub.status.busy": "2024-05-15T16:21:12.442686Z",
     "iopub.status.idle": "2024-05-15T16:21:12.804839Z",
     "shell.execute_reply": "2024-05-15T16:21:12.804529Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "# for figures in notebook\n",
    "\n",
    "# import & initialize epygram\n",
    "import epygram\n",
    "epygram.init_env()\n",
    "\n",
    "# path to file\n",
    "import os\n",
    "INPUTS_DIR = os.path.join('..', 'inputs')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:21:12.809218Z",
     "iopub.status.busy": "2024-05-15T16:21:12.808877Z",
     "iopub.status.idle": "2024-05-15T16:21:12.815587Z",
     "shell.execute_reply": "2024-05-15T16:21:12.815813Z"
    }
   },
   "outputs": [],
   "source": [
    "paths = [os.path.join(INPUTS_DIR, 'grid.arome-forecast.guyane0025+00{:02}:00.grib'.format(i))\n",
    "         for i in (0, 12, 24)]\n",
    "r = epygram.resources.meta_resource(paths, 'r', 'CL+MV')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:21:12.819033Z",
     "iopub.status.busy": "2024-05-15T16:21:12.818391Z",
     "iopub.status.idle": "2024-05-15T16:21:35.237676Z",
     "shell.execute_reply": "2024-05-15T16:21:35.237413Z"
    }
   },
   "outputs": [],
   "source": [
    "f = r.readfield({'shortName':'t', 'typeOfFirstFixedSurface':100})  # temperature on pressure levels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:21:35.241411Z",
     "iopub.status.busy": "2024-05-15T16:21:35.240794Z",
     "iopub.status.idle": "2024-05-15T16:21:35.242608Z",
     "shell.execute_reply": "2024-05-15T16:21:35.242812Z"
    }
   },
   "outputs": [],
   "source": [
    "print(f.getdata(d4=True).shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:21:35.264721Z",
     "iopub.status.busy": "2024-05-15T16:21:35.250872Z",
     "iopub.status.idle": "2024-05-15T16:21:35.661450Z",
     "shell.execute_reply": "2024-05-15T16:21:35.661186Z"
    }
   },
   "outputs": [],
   "source": [
    "s = f.extractsection((-55,5), (-55,2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-15T16:21:35.664970Z",
     "iopub.status.busy": "2024-05-15T16:21:35.664286Z",
     "iopub.status.idle": "2024-05-15T16:21:35.665818Z",
     "shell.execute_reply": "2024-05-15T16:21:35.665598Z"
    }
   },
   "outputs": [],
   "source": [
    "print(type(s))\n",
    "print(s.getdata(d4=True).shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
